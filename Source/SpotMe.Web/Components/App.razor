@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Routing
@using SpotMe.Web.Components.Layout

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="SpotMe.Web.styles.css" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <title>SpotMe - Spotify Player</title>
    <HeadOutlet />
</head>

<body>
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            <FocusOnNavigate RouteData="@routeData" Selector="h1"/>
        </Found>
        <NotFound>
            <PageTitle>Not Found - SpotMe</PageTitle>
            <LayoutView Layout="@typeof(Layout.MainLayout)">
                <div class="dark-container">
                    <div class="spotify-content">
                        <h1>404</h1>
                        <p class="tagline">Page not found</p>
                        <a href="/" class="spotify-button">
                            <i class="bi bi-house"></i> Go Home
                        </a>
                    </div>
                </div>
            </LayoutView>
        </NotFound>
    </Router>
    <script src="_framework/blazor.web.js"></script>
    <script src="js/auth.js"></script>
    <script src="js/spotify-interop.js"></script>
    <script src="js/spotify-player.js"></script>
<script>
        // Define the global callback before loading the SDK
        window.onSpotifyWebPlaybackSDKReady = function() {
            console.log('Spotify Web Playback SDK is ready');
            if (window.spotifyPlayer && window.spotifyPlayer.onSDKReady) {
                window.spotifyPlayer.onSDKReady();
            }
        };
    </script>
    <script src="https://sdk.scdn.co/spotify-player.js" async></script>
</body>

</html>