@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime

<div class="app-container">
    @Body
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        
        if (firstRender)
        {
            try
            {
                // Add a check to see if we already have Spotify scripts loaded
                await JSRuntime.InvokeVoidAsync("eval", @"
                    // Define global namespace for SpotMe app
                    window.SpotMe = window.SpotMe || {};
                    
                    // Safe script loading function
                    window.SpotMe.loadSpotifySDK = function() {
                        console.log('Loading Spotify Web Playback SDK...');
                        if (!window.spotifyScriptLoaded) {
                            window.spotifyScriptLoaded = true;
                            return new Promise((resolve, reject) => {
                                const script = document.createElement('script');
                                script.src = 'https://sdk.scdn.co/spotify-player.js';
                                script.onload = () => {
                                    console.log('Spotify SDK loaded successfully');
                                    resolve();
                                };
                                script.onerror = (err) => {
                                    console.error('Failed to load Spotify SDK:', err);
                                    reject(err);
                                };
                                document.body.appendChild(script);
                            });
                        } else {
                            console.log('Spotify SDK already loaded');
                            return Promise.resolve();
                        }
                    };
                    
                    // Only try to load if we're on a page that needs it
                    if (window.location.pathname === '/player') {
                        window.SpotMe.loadSpotifySDK();
                    }
                ");
            }
            catch (Exception ex)
            {
                Console.Error.WriteLine($"Error loading Spotify SDK: {ex.Message}");
            }
        }
    }
}
