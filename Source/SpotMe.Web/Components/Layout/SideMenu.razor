@inject NavigationManager NavigationManager

<aside class="sidebar">
    <div class="sidebar-header">
        <a href="/" class="logo">
            <i class="bi bi-spotify spotify-icon"></i>
            <span>SpotMe</span>
        </a>
    </div>
    
    <nav class="sidebar-nav">
        <ul>
            <li class="@GetActiveClass("/")">
                <a href="/">
                    <i class="bi bi-house-door"></i>
                    <span>Home</span>
                </a>
            </li>
            <li class="@GetActiveClass("/search")">
                <a href="/search">
                    <i class="bi bi-search"></i>
                    <span>Search</span>
                </a>
            </li>
            <li class="@GetActiveClass("/playlists")">
                <a href="/playlists">
                    <i class="bi bi-music-note-list"></i>
                    <span>Playlists</span>
                </a>
            </li>
        </ul>
    </nav>
    
    <div class="sidebar-divider"></div>
    
    <div class="user-profile">
        <div class="user-avatar">
            @if (!string.IsNullOrEmpty(UserProfile?.ImageUrl))
            {
                <img src="@UserProfile.ImageUrl" alt="@UserProfile?.DisplayName" />
            }
            else
            {
                <i class="bi bi-person-circle"></i>
            }
        </div>
        <div class="user-info">
            <p class="user-name">@(UserProfile?.DisplayName ?? "User")</p>
            <p class="user-email">@(UserProfile?.Email ?? "")</p>
        </div>
    </div>
    
    <button @onclick="HandleLogout" class="logout-button">
        <i class="bi bi-box-arrow-right"></i>
        <span>Logout</span>
    </button>
</aside>

@code {
    [Parameter]
    public MainLayout.UserProfile? UserProfile { get; set; }
    
    [Parameter]
    public EventCallback OnLogout { get; set; }
    
    private string GetActiveClass(string path)
    {
        return NavigationManager.Uri.Contains(path) ? "active" : "";
    }
    
    private async Task HandleLogout()
    {
        await OnLogout.InvokeAsync();
    }
}